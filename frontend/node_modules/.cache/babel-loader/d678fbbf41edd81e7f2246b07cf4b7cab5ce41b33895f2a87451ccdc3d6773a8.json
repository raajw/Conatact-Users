{"ast":null,"code":"var _jsxFileName = \"/home/raj/Desktop/Erino/frontend/src/context/Context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\nimport axios from 'axios';\n\n// Create the Users Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersContext = /*#__PURE__*/createContext();\n\n// Custom hook to use Users Context\nexport const useUsers = () => {\n  _s();\n  return useContext(UsersContext);\n};\n\n// Create the Provider component\n_s(useUsers, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const UsersProvider = ({\n  children\n}) => {\n  _s2();\n  const [users, setUsers] = useState([]);\n  const [status, setStatus] = useState(false); // Loading status\n  const [showUsers, setShowUsers] = useState(false); // Toggle visibility of users table\n\n  // Fetch users function\n  const fetchUsers = useCallback(async () => {\n    setStatus(true); // Set loading status to true\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/users\");\n      console.log(\"Fetched Users:\", response.data);\n      setUsers(response.data.UserList); // Set users to state\n      setStatus(false); // Set loading status to false\n      toggleUsersVisibility(); // Toggle table visibility after fetching users\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error fetching users:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setStatus(false); // Set loading status to false on error\n    }\n  }, []);\n\n  // Toggle the visibility of the UsersTable\n  const toggleUsersVisibility = () => {\n    setShowUsers(prevState => !prevState); // Toggle visibility\n  };\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: {\n      users,\n      status,\n      showUsers,\n      fetchUsers,\n      toggleUsersVisibility\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s2(UsersProvider, \"QtZhMoAlBdfSk9S6SjBXh4bUv0I=\");\n_c = UsersProvider;\nvar _c;\n$RefreshReg$(_c, \"UsersProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","axios","jsxDEV","_jsxDEV","UsersContext","useUsers","_s","UsersProvider","children","_s2","users","setUsers","status","setStatus","showUsers","setShowUsers","fetchUsers","response","get","console","log","data","UserList","toggleUsersVisibility","error","_error$response","message","prevState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/raj/Desktop/Erino/frontend/src/context/Context.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\nimport axios from 'axios';\n\n// Create the Users Context\nconst UsersContext = createContext();\n\n// Custom hook to use Users Context\nexport const useUsers = () => useContext(UsersContext);\n\n// Create the Provider component\nexport const UsersProvider = ({ children }) => {\n  const [users, setUsers] = useState([]);\n  const [status, setStatus] = useState(false); // Loading status\n  const [showUsers, setShowUsers] = useState(false); // Toggle visibility of users table\n\n  // Fetch users function\n  const fetchUsers = useCallback(async () => {\n    setStatus(true); // Set loading status to true\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/users\");\n      console.log(\"Fetched Users:\", response.data);\n      setUsers(response.data.UserList); // Set users to state\n      setStatus(false); // Set loading status to false\n      toggleUsersVisibility(); // Toggle table visibility after fetching users\n    } catch (error) {\n      console.error(\"Error fetching users:\", error.response?.data || error.message);\n      setStatus(false); // Set loading status to false on error\n    }\n  }, []);\n\n  // Toggle the visibility of the UsersTable\n  const toggleUsersVisibility = () => {\n    setShowUsers((prevState) => !prevState); // Toggle visibility\n  };\n\n  return (\n    <UsersContext.Provider value={{ users, status, showUsers, fetchUsers, toggleUsersVisibility }}>\n      {children}\n    </UsersContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC/E,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMQ,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;;AAEtD;AAAAE,EAAA,CAFaD,QAAQ;AAGrB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMkB,UAAU,GAAGhB,WAAW,CAAC,YAAY;IACzCa,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,iCAAiC,CAAC;MACnEC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC5CV,QAAQ,CAACM,QAAQ,CAACI,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;MAClCT,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;MAClBU,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdN,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI,KAAIG,KAAK,CAACE,OAAO,CAAC;MAC7Eb,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,qBAAqB,GAAGA,CAAA,KAAM;IAClCR,YAAY,CAAEY,SAAS,IAAK,CAACA,SAAS,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,oBACExB,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,KAAK;MAAEE,MAAM;MAAEE,SAAS;MAAEE,UAAU;MAAEO;IAAsB,CAAE;IAAAf,QAAA,EAC3FA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACxB,GAAA,CA9BWF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}